.\" File generated using by MAQAO.
.TH MAQAO-LPROF "1" "2018/09/13" "MAQAO-LPROF 2.5.9" "User Commands"
.SH NAME
maqao-lprof \- manual page for maqao lprof module.
.SH SYNOPSIS

.br
	Data collection mode : maqao lprof [options] -- <APPLICATION> [arguments, if any]
.br
	Data display mode    : maqao lprof -xp=<EXPERIMENT_DIRECTORY> [--display-functions | --display-loops] [options]
.SH DESCRIPTION

.br
The MAQAO Lightweight Profiler (LProf) allows profiling of target applications to detect hot functions and loops in 2 steps.
.br
	1) Data collection (sampling)
.br
	2) Data display
.SH OPTIONS
.TP
\fB\-xp=\fR, \fB\-\-experiment-path\fR\=<path>
Experiment directory where the collected data is stored. It is generated in the current directory during data collection step. 
.br
If not specified, a default pattern will be used: maqao_lprof_YYYY-MM-DD-hh-mm-ss. 
.br
Y: year, M: month, D: day, h: hour, m: minute, s: second. 
.br
/!\ Warning: at display, this directory is used to load the collected data and is a mandatory parameter.
.SH "    DATA COLLECTION"
.TP
\fB\-\-maximum-buffer-megabytes\fR\=<integer>
Limit RAM usage during samples collection to X Megabytes. Default is 1024 (1 GB).
.TP
\fB\-\-tmpfiles-buffer-megabytes\fR\=<integer>
Limit RAM used for dumping samples to temp. files to X Megabytes. Default is 20 MB. Cannot be greater than maximum-tmpfiles-megabytes.
.TP
\fB\-\-maximum-tmpfiles-megabytes\fR\=<integer>
Limit total temporary files size during samples collection to X Megabytes. Default is 1024 (1 GB). Cannot be lower than tmpfiles-buffer-megabytes.
.TP
\fB\-mc=\fR, \fB\-\-mpi-command\fR\=<MPI command>
MPI command used to interactively run application. LProf prepends this to application command. When combined with batch-script, substitutes <mpi_command> in job script
.TP
\fB\-bs=\fR, \fB\-\-batch-script\fR\=<path to batch script>
Batch script used to run application. LProf submits this file to <batch-command>. In this script, replace application run command with "<run_command>".
.TP
\fB\-bc=\fR, \fB\-\-batch-command\fR\=<batch submission command>
Tell LProf how to submit <batch-script>. If omitted, guessed from <batch-script> extension.
.TP
\fB\-\-checking-directory\fR\=on/off [DEPRECATED]
Use check-directory/cd.
.TP
\fB\-cd=\fR, \fB\-\-check-directory\fR\=on/off
Disable checking if the specified experiment directory already exists. 
.br
By default, a check is always performed to avoid modifying an existing experiment directory.
.TP
\fB\-g=\fR, \fB\-\-granularity\fR\=small/medium/large [DEPRECATED]
Use sampling-rate.
.TP
\fB\-\-sampling-rate\fR\=low/medium/high/highest
Change the sampling rate (number of collected samples). 
.br
Four rates are available depending on the execution time of the application: 
.br
  - highest: a few seconds 
.br
  - high   : less than 1 min 
.br
  - medium : between 1 min and 1 hour (default) 
.br
  - low    : over 1 hour
.TP
\fB\-hwc=\fR, \fB\-\-hardware-counters\fR\=<list> [ADVANCED]
Provide a custom list of hardware counters to profile. 
.br
For each hardware counter, the threshold value should be set using format "@VALUE". 
.br
Raw codes can be used as well as hardware counter names. 
.br
ex: hwc=CPU_CLK_UNHALTED@1000000,0x412e@1000000,INST_RETIRED@500000
.TP
\fB\-p\fR, \fB\-\-profile\fR\=<string>
Use ready-to-use lists of hardware events.
.TP
\fB\-\-detect-kernel\fR\=on (default)/off
Disable kernel version check. 
.br
/!\ Warning: LProf handles kernels from 2.6.32-279 version, and higher. 
.br
For other kernel versions, the tool's behavior may be undefined and the output data not valid.
.TP
\fB\-ldi=\fR, \fB\-\-library-debug-info\fR\=<list>/on/off
Analyze libraries debug information to locate loops with the --display-loops option, and also retrieve inlined library functions. 
.br
Libraries need to be compiled with the -g option. 
.br
Allowed values are: 
.br
  - "lib1.so, lib2.so, ..." : Get loops information only for libraries in the list. Use names as displayed by ldd <application executable>. 
.br
  - on                      : Get loops information for all libraries. 
.br
  - off                     : Get only functions information using ELF information for all libraries (default). 
.br

.br
/!\ Warning: this option can increase the analysis overhead.
.TP
\fB\-ug=\fR, \fB\-\-user-guided\fR\=<delay (seconds)> (timer mode) / on (signal mode)
Allow user to control the sampling in two modes: 
.br
  - timer mode  : user-defined delay (in seconds) before the data collection process. 
.br
                  May be useful to ignore the initialization step of an application. 
.br
  - signal mode : use SIGTSTP signal (CTRL+Z) to pause/resume the data collection process 
.br
                  Can be used as many times as necessary during the run of the application.
.TP
\fB\-btm=\fR, \fB\-\-backtrace-mode\fR\=call/stack/branch/off
[Advanced] Select the perf_event_open sample type used to collect callchains: 
.br
  - call   : use the PERF_SAMPLE_CALLCHAIN sample type (default). 
.br
  - stack  : use the PERF_SAMPLE_STACK_USER sample type. 
.br
             Allows stack unwinding. Requires Linux 3.7. 
.br
  - branch : use the PERF_SAMPLE_BRANCH_STACK sample type. 
.br
             Uses CPU sampling hardware. Requires Linux 3.4. 
.br
  - off    : Disable callchains collection. 
.br
             Reduces sampling overhead and experiment directory size but some OpenMP/MPI functions/loops will no more be correctly categorized at display.
.TP
\fB\-t=\fR, \fB\-\-target\fR\=SX3... [DEPRECATED]
Use use-alternative-engine (*) [(*) hidden options].
.TP
\fB\-ae\fR, \fB\-\-use-alternative-engine\fR
Use alternative sampling engine (MAQAO version > 2.4).
.TP
\fB\-\-use-OS-timers\fR
Use OS timers based sampling engine. Needed in case of unavailable HW counters or undetected processor.
.TP
\fB\-cpu=\fR, \fB\-\-cpu-list\fR\=<string>
CPUs to use with alternative/default engine (MAQAO version > 2.4). Ex: 0,2 to use CPU0 and CPU2.
.TP
\fB\-mt=\fR, \fB\-\-mpi-target\fR\=<path>
Path to application executable, to use with alternative engine (MAQAO version > 2.4).
.TP
\fB\-st=\fR, \fB\-\-sampler-threads\fR\="nprocs" or <integer>
Number of threads to process records in ring buffers, to use with alternative/default engine (MAQAO version > 2.4).
.TP
\fB\-fs=\fR, \fB\-\-finalize-signal\fR\=<positive integer>
Signal used by the parallel launcher to notify ranks finalization. Allows default sampling engine to catch non standard launcher behavior.
.TP
\fB\-sy\fR, \fB\-\-sync-tracer [EXPERIMENTAL]\fR
Synchronous (instead of asynchronous) ptracing for default engine.
.SH "    DATA DISPLAY"
.TP
\fB\-df\fR, \fB\-\-display-functions\fR
Display the exclusive time spent in the aplication, libraries and system functions.
.TP
\fB\-dl\fR, \fB\-\-display-loops\fR
Display the exclusive time spent in the application loops. 
.br
If used with library-debug-information option during the collection, library loops information will be displayed too.
.TP
\fB\-v=\fR, \fB\-\-view\fR\=summary/full [DEPRECATED]
Use display-by-threads.
.TP
\fB\-dt\fR, \fB\-\-display-by-threads\fR
Information is displayed by thread.
.TP
\fB\-c=\fR, \fB\-\-categorization\fR\=summary/<level>/full [DEPRECATED]
Use category-view.
.TP
\fB\-cv=\fR, \fB\-\-category-view\fR\=summary/<level>/full
Display categorization table at various levels: 
.br
  - summary : The information for threads/processes/nodes are grouped in one table (default). 
.br
  - node    : node level. 
.br
  - process : process level. 
.br
  - thread  : thread level. 
.br
  - full    : all the above categorization tables (summary, node, process, thread). 
.br

.br
The categorization table shows the time percentage for each of the categories below: 
.br
  - Application   : application executable. 
.br
  - MPI           : MPI runtime (openmpi, mpich, intel mpi,...). 
.br
  - OMP           : OpenMP runtime (gomp, iomp...). 
.br
  - Math          : Math libraries (libm, libmkl, libblas...). 
.br
  - System        : system interface (linux system calls). 
.br
  - Pthread       : Pthread runtime. 
.br
  - I/O           : I/O functions. 
.br
  - String        : string manipulation functions (strcpy, trim...). 
.br
  - Memory        : memory management functions (malloc, free...). 
.br
  - Others        : functions that are not of the categories above.
.TP
\fB\-lec=\fR, \fB\-\-libraries-extra-categories\fR\=<comma-separated list>
Consider specified libraries as extra categories. Use libraries names as given by 'ldd <application>'.
.TP
\fB\-of=\fR, \fB\-\-output-format\fR\=html/csv
Output results in a file of the given format: 
.br
  - html : generate a web page in <PROFILING_DIRECTORY>/html directory. Open html/index.html in a web browser to view the results. 
.br
  - csv  : generate a csv file for each thread (default name: <CURRENT_DIRECTORY>/maqao_<NODE-NAME>_<THREAD-ID>.csv).
.TP
\fB\-op=\fR, \fB\-\-output-path [SHOULD BE USED WITH THE output-format OPTION]\fR\=<path>
Specifiy the path of the generated results files.
.TP
\fB\-\-output-prefix [SHOULD BE USED WITH THE output-format OPTION]\fR\=<string>
Add a custom prefix to the generated results files.
.TP
\fB\-ccl\fR, \fB\-\-callchain-lib [DEPRECATED]\fR
Extend the callchain scope to external libraries function calls.
.TP
\fB\-cca\fR, \fB\-\-callchain-all [DEPRECATED]\fR
Display the callchain with no limited scope (application + libraries + system calls).
.TP
\fB\-cco\fR, \fB\-\-callchain-off [DEPRECATED]\fR
Disable callchains analysis. Some OpenMP/MPI functions/loops will no more be correctly categorized. Use this only when display takes too much time/memory.
.TP
\fB\-cc\fR, \fB\-\-callchain\fR\=exe/lib/all/off
Specify objects for callchains analysis: 
.br
  - exe: display the callchain (if available) for each function with a scope limited to the application. 
.br
  - lib: extend the callchain scope to external libraries function calls. 
.br
  - all: display the callchain with no limited scope (application + libraries + system calls). 
.br
  - off: disable callchains analysis. Some OpenMP/MPI functions/loops will no more be correctly categorized. Use this only when display takes too much time/memory.
.TP
\fB\-cvf=\fR, \fB\-\-callchain-value-filter\fR\=<integer between 0 and 100> [DEPRECATED]
Use callchain-weight-filter.
.TP
\fB\-cwf=\fR, \fB\-\-callchain-weight-filter\fR\=<integer between 0 and 100>
Filter callchains that don't represent at least X percent of time in the function reference
.TP
\fB\-ssv=\fR, \fB\-\-show-samples-value\fR\=on/off (default)
Display the number of samples collected (in between brackets).
.TP
\fB\-ct=\fR, \fB\-\-cumulative-threshold\fR\=<integer between 0 and 100>
Display the top loops/functions which cumulative percentage is greater than the given value (e.g: ct=50).
.SH EXAMPLES
.TP
maqao lprof -- <APPLICATION>
Launch the profiler in collect sampling mode on a sequential application. 
.br
It stores the results into a default experiment directory (maqao_lprof_YYYY-MM-DD-hh-mm-ss). 
.br
Y: year, M: month, D: day, h: hour, m: minute, s: second 
.TP
maqao lprof --mpi-command="mpirun -n 4" -- <APPLICATION>
Same as previous example but for MPI application with 4 processes. 
.TP
maqao lprof -xp=<EXPERIMENT_DIRECTORY> [--mpi-command="mpirun -n 4"] -- <APPLICATION>  arg1 arg2 ...
If the application needs one or more arguments, make sure to use the '--' delimiter. 
.br
Here, results are stored into the directory given by the user. 
.TP
maqao lprof -xp=<EXPERIMENT_DIRECTORY> -df
Display the list of functions coming from the experiment directory into the terminal. 
.br
The function display mode allows to localized where are the hot functions of the application. 
.TP
maqao lprof -xp=<EXPERIMENT_DIRECTORY> -df -cc=exe -cv=full
Display the list of functions coming from the experiment directory into the terminal. 
.br
The -cc=exe (--callchain) option allows to display the callchains. 
.br
The -cv=full (--category-view) option allows to display all the categorization tables. 
.br
The function display mode allows to localized where are the hot functions of the application. 
.TP
maqao lprof -xp=<EXPERIMENT_DIRECTORY> -df -dt -of=csv -op=$PWD/help_example
Generate a CSV file (-of=csv) for each thread (-dt) with the functions info (-df) into $PWD/help_example (-op=...). Specified directory for -op option must exist. If not, files will not be created. 
.TP
maqao lprof -xp=<EXPERIMENT_DIRECTORY> -dl
Display the list of loops coming from the experiment directory into the terminal. 
.br
The loop display mode pinpoints hot loops in application. 
.TP
maqao lprof -xp=<EXPERIMENT_DIRECTORY> -of=html
Generate the "html" directory into <EXPERIMENT_DIRECTORY>/html. 
.br
Open file <EXPERIMENT_DIRECTORY>/html/index.html in a web browser to view the results. 
.SH AUTHOR
Written by The MAQAO team.
.SH "REPORTING BUGS"
Report bugs to <support@maqao.org>.
.SH COPYRIGHT
MAQAO (C), 2004-2018 Universite de Versailles Saint-Quentin-en-Yvelines (UVSQ), 
is distributed under the GNU Lesser General Public License (GNU LGPL). MAQAO is 
free software; you can use it under the terms of the GNU Lesser General 
Public License as published by the Free Software Foundation; either version 2.1 
of the License, or (at your option) any later version. This software is distributed 
in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the 
implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the 
GNU Lesser General Public License for more details.

The full legal text of the GNU Lesser General Public License (GNU LGPL) is available
at http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
.SH "SEE ALSO"
maqao(1), maqao-madras(1), maqao-disass(1), maqao-analyze(1), maqao-cqa(1)
