--- Declares methods that can be invoked on a project
-- (instance of the 'project' class)
module project

-- ------------------ Essential functions ----------------------

--- Returns a new MAQAO project (wraps project_new)
-- @class project
-- @param name name of the project (string)
-- @return a project
function project:new (name)

--- Load a project (wraps project_load_file)
-- @class project
-- @param name name of a binary file (string)
-- @param uarch micro-archicture (integer, defined in ?)
-- @return an asmfile
function project:load (name, uarch)

--- Removes a file from a project (wraps project_remove_file)
-- @class project
-- @param asmfile an asmfile
-- @return value returned by the C wrapped function
function project:remove_file (asmfile)

--- Returns the name of a project
-- @return name of the project (string)
function project:get_name ()

--- Print the callgraph (CG) of a project to a DOT file
-- @return path to the output file
function project:get_CG_file_path ()

--- Set the uarch
-- @class project
-- @param uarch the name of the uarch, as defined in Consts.<arch>
function project:set_uarch_name (uarch)

--- Set the compiler
-- @class project
-- @param compiler_code a constant like COMP_ defined in Consts
function project:set_compiler_code (compiler_code)

--- Set the language
-- @class project
-- @param language_code a constant like LANG_ defined in Consts
function project:set_language_code (language_code)

--- Iterates over the asmfiles of a project
-- @return next asmfile
function project:asmfiles ()

--- Return the identifier of the micro architecture used for the project
-- @return an integer
function project:get_uarch_id ()

--- Return the name of the micro architecture used for the project
-- @return a string
function project:get_uarch_name ()

-- ------------------ Shortcut functions -----------------------

--- Returns the first asmfile of a project
-- @return first asmfile
function project:get_first_asmfile ()

--- Returns the number of asmfiles in a project
-- @return number of asmfiles
function project:get_nasmfiles ()

--- Returns the number of functions in a project
-- @return number of functions
function project:get_nfunctions ()

--- Returns the number of loops in a project
-- @return number of loops
function project:get_nloops ()

--- Returns the number of blocks in a project (excluding virtual blocks, not exposed in LUA structures)
-- @return number of blocks
function project:get_nblocks ()

--- Returns the number of instructions in a project
-- @return number of instructions
function project:get_ninsns ()

-- -------------------- Meta functions -------------------------

--- Print "Project: <name of the project>" (meta-method)
function project:tostring ()
